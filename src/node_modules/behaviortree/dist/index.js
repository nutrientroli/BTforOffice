!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=15)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.RUNNING=Symbol("running"),t.SUCCESS=!0,t.FAILURE=!1},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=function(e){return e&&e.__esModule?e:{default:e}}(n(3));function i(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}var a=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.config,r=void 0===n?{}:n,o=i(e,["config"]);!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var u=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,o));return u.nodeType="Decorator",u.setConfig(r),u}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default),o(t,[{key:"decorate",value:function(e){return e()}},{key:"run",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.runData,u=n.registryLookUp,a=void 0===u?function(e){return e}:u,f=i(n,["runData","registryLookUp"]),c=o?[]:null,l=this.decorate(function(){return a(t.blueprint.node).run(e,r({},f,{registryLookUp:a,runData:c}))},e,this.config);return o&&o.push({config:this.config,name:this.name,type:this.nodeType,nodes:c,result:l}),l}},{key:"setConfig",value:function(e){this.config=e}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(n(3));function a(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var f=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.nodeType="BranchNode",n.numNodes=e.nodes.length,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default),o(t,[{key:"run",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.indexes,o=void 0===n?[]:n,i=t.rerun,f=t.runData,c=t.registryLookUp,l=void 0===c?function(e){return e}:c,s=f?[]:null;this.blueprint.start(e);for(var p=this.START_CASE,y=o.shift()||0;y<this.numNodes;){var d=l(this.blueprint.nodes[y]).run(e,{indexes:o,rerun:i,runData:s,registryLookUp:l});if(d===u.RUNNING)return[y].concat(a(o));if("object"===(void 0===d?"undefined":r(d)))return[].concat(a(o),[y],a(d));if(d===this.OPT_OUT_CASE){p=d;break}++y}if(this.blueprint.end(e),f){for(++y;y<this.numNodes;)s.push(l(this.blueprint.nodes[y]).collectData()),++y;f.push({name:this.name,type:this.nodeType,nodes:s,result:p})}return p}},{key:"collectData",get:function(){return{name:this.name,type:this.nodeType,nodes:this.nodes.map(function(e){return e.collectData()})}}}]),t}();t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0);function i(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}var a=function(){},f=function(){function e(t){var n=t.run,o=void 0===n?a:n,u=t.start,f=void 0===u?a:u,c=t.end,l=void 0===c?a:c,s=i(t,["run","start","end"]);!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nodeType="Node",this.blueprint=r({run:o,start:f,end:l},s)}return o(e,[{key:"run",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.rerun,o=void 0!==n&&n,a=t.runData,f=t.registryLookUp,c=void 0===f?function(e){return e}:f,l=i(t,["rerun","runData","registryLookUp"]);o||this.blueprint.start(e);var s=this.blueprint.run(e,r({},l,{rerun:o,runData:a,registryLookUp:c}));return s!==u.RUNNING&&this.blueprint.end(e),a&&a.push({name:this.name,type:this.nodeType,result:s}),s}},{key:"collectData",value:function(){return{name:this.name,type:this.nodeType}}},{key:"name",get:function(){return this._name||this.blueprint.name},set:function(e){this._name=e}}]),e}();t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){return e&&e.__esModule?e:{default:e}}(n(3));function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var u=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var u=arguments.length,i=Array(u),a=0;a<u;a++)i[a]=arguments[a];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.nodeType="Task",o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(n(2));function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var i=function(e){function t(){var e,n,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=Array(i),f=0;f<i;f++)a[f]=arguments[f];return n=o=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(a))),o.nodeType="Sequence",o.START_CASE=r.SUCCESS,o.OPT_OUT_CASE=r.FAILURE,u(o,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default),t}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(n(2));function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var i=function(e){function t(){var e,n,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=Array(i),f=0;f<i;f++)a[f]=arguments[f];return n=o=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(a))),o.nodeType="Selector",o.START_CASE=r.FAILURE,o.OPT_OUT_CASE=r.SUCCESS,u(o,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default),t}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(n(2));function a(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function f(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var c=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,u=Array(o),i=0;i<o;i++)u[i]=arguments[i];return n=r=f(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.nodeType="Random",f(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default),o(t,[{key:"run",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.indexes,o=void 0===n?[]:n,i=t.rerun,f=t.registryLookUp,c=void 0===f?function(e){return e}:f;this.blueprint.start(e);var l=o.shift()||0;i||(l=Math.floor(Math.random()*this.numNodes));var s=c(this.blueprint.nodes[l]).run(e,{indexes:o,rerun:i,registryLookUp:c});return s===u.RUNNING?[l].concat(a(o)):"object"===(void 0===s?"undefined":r(s))?[].concat(a(o),[l],a(s)):(this.blueprint.end(e),s)}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();t.getRegistry=function(){return a},t.registryLookUp=f;var u=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(n(4));var a={};function f(e){if("string"==typeof e){var t=a[e];if(!t)throw new Error("No node with name "+e+" registered.");return t}return e}var c=function(){function e(t){var n=t.tree,r=t.blackboard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.tree=n,this.blackboard=r,this.lastResult=null}return o(e,[{key:"step",value:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).debug,t=void 0!==e&&e,n=this.lastResult&&"object"===r(this.lastResult)?this.lastResult:[],o=this.lastResult===u.RUNNING||n.length>0,i=t?[]:null;this.lastResult=f(this.tree).run(this.blackboard,{indexes:n,rerun:o,registryLookUp:f,runData:i}),this.lastRunData=i}}],[{key:"register",value:function(e,t){a[e]="function"==typeof t?new i.default({name:e,run:t}):t}},{key:"cleanRegistry",value:function(){a={}}}]),e}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(n(1));function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var a=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,u=Array(o),a=0;a<o;a++)u[a]=arguments[a];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.nodeType="LoopDecorator",i(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default),r(t,[{key:"setConfig",value:function(e){var t=e.loop,n=void 0===t?1/0:t;this.config={loop:n}}},{key:"decorate",value:function(e){for(var t=0,n=o.FAILURE;t++<this.config.loop;)if((n=e())===o.FAILURE)return o.FAILURE;return n}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(n(1));function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var a=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,u=Array(o),a=0;a<o;a++)u[a]=arguments[a];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.nodeType="InvertDecorator",i(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default),r(t,[{key:"decorate",value:function(e){var t=e();return t===o.RUNNING?o.RUNNING:t===o.SUCCESS?o.FAILURE:o.SUCCESS}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(n(1));function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var a=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,u=Array(o),a=0;a<o;a++)u[a]=arguments[a];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.nodeType="CooldownDecorator",i(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default),r(t,[{key:"setConfig",value:function(e){var t=e.cooldown,n=void 0===t?5:t;this.config={cooldown:n}}},{key:"decorate",value:function(e){var t=this;return this.lock?o.FAILURE:(this.lock=!0,setTimeout(function(){t.lock=!1},1e3*this.config.cooldown),e())}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(n(1));function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var a=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,u=Array(o),a=0;a<o;a++)u[a]=arguments[a];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.nodeType="AlwaysSucceedDecorator",i(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default),r(t,[{key:"decorate",value:function(e){return e()===o.RUNNING?o.RUNNING:o.SUCCESS}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(n(1));function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var a=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,u=Array(o),a=0;a<o;a++)u[a]=arguments[a];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.nodeType="AlwaysFailDecorator",i(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default),r(t,[{key:"decorate",value:function(e){return e()===o.RUNNING?o.RUNNING:o.FAILURE}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=b(n(1)),u=b(n(7)),i=b(n(6)),a=b(n(5)),f=b(n(4)),c=b(n(13)),l=b(n(12)),s=b(n(11)),p=b(n(10)),y=b(n(9)),d=n(8);function b(e){return e&&e.__esModule?e:{default:e}}var h=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.types={task:f.default,decorator:o.default,selector:i.default,sequence:a.default,random:u.default,invert:p.default,fail:c.default,succeed:l.default,cooldown:s.default,loop:y.default}}return r(e,[{key:"defineType",value:function(e,t){this.types[e]=t}},{key:"parse",value:function(e){var t=this,n=e.type,r=e.name,o=e.node,u=e.nodes,i=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["type","name","node","nodes"]),a=this.types[n];if(!a){var f=(0,d.registryLookUp)(n);if(f)return f.name=r,f;throw new Error("Don't know how to handle type "+n+". Please register this first.")}return new a({name:r,node:o?this.parse(o):null,nodes:u?u.map(function(e){return t.parse(e)}):null,config:i})}}]),e}();t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RUNNING=t.FAILURE=t.SUCCESS=t.Task=t.Decorator=t.Random=t.Sequence=t.Selector=t.Node=t.BranchNode=t.BehaviorTreeImporter=t.registryLookUp=t.getRegistry=void 0;var r=n(0);Object.defineProperty(t,"SUCCESS",{enumerable:!0,get:function(){return r.SUCCESS}}),Object.defineProperty(t,"FAILURE",{enumerable:!0,get:function(){return r.FAILURE}}),Object.defineProperty(t,"RUNNING",{enumerable:!0,get:function(){return r.RUNNING}});var o=n(8),u=d(o),i=d(n(14)),a=d(n(2)),f=d(n(3)),c=d(n(6)),l=d(n(5)),s=d(n(7)),p=d(n(1)),y=d(n(4));function d(e){return e&&e.__esModule?e:{default:e}}t.default=u.default,t.getRegistry=o.getRegistry,t.registryLookUp=o.registryLookUp,t.BehaviorTreeImporter=i.default,t.BranchNode=a.default,t.Node=f.default,t.Selector=c.default,t.Sequence=l.default,t.Random=s.default,t.Decorator=p.default,t.Task=y.default}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRGVjb3JhdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9CcmFuY2hOb2RlLmpzIiwid2VicGFjazovLy8uL3NyYy9Ob2RlLmpzIiwid2VicGFjazovLy8uL3NyYy9UYXNrLmpzIiwid2VicGFjazovLy8uL3NyYy9TZXF1ZW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1JhbmRvbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQmVoYXZpb3JUcmVlLmpzIiwid2VicGFjazovLy8uL3NyYy9kZWNvcmF0b3JzL0xvb3BEZWNvcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RlY29yYXRvcnMvSW52ZXJ0RGVjb3JhdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9kZWNvcmF0b3JzL0Nvb2xkb3duRGVjb3JhdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9kZWNvcmF0b3JzL0Fsd2F5c1N1Y2NlZWREZWNvcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RlY29yYXRvcnMvQWx3YXlzRmFpbERlY29yYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQmVoYXZpb3JUcmVlSW1wb3J0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiUlVOTklORyIsIlNVQ0NFU1MiLCJGQUlMVVJFIiwiRGVjb3JhdG9yIiwiX3JlZiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIl9yZWYkY29uZmlnIiwiY29uZmlnIiwicHJvcHMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3RoaXMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwibm9kZVR5cGUiLCJzZXRDb25maWciLCJydW4iLCJibGFja2JvYXJkIiwiX3RoaXMyIiwiX3JlZjIiLCJydW5EYXRhIiwiX3JlZjIkcmVnaXN0cnlMb29rVXAiLCJyZWdpc3RyeUxvb2tVcCIsIngiLCJzdWJSdW5EYXRhIiwicmVzdWx0IiwiZGVjb3JhdGUiLCJibHVlcHJpbnQiLCJub2RlIiwiX2V4dGVuZHMiLCJwdXNoIiwidHlwZSIsIm5vZGVzIiwiX2NvbnN0YW50cyIsIkJyYW5jaE5vZGUiLCJudW1Ob2RlcyIsIl9yZWYkaW5kZXhlcyIsImluZGV4ZXMiLCJyZXJ1biIsIl9yZWYkcmVnaXN0cnlMb29rVXAiLCJzdGFydCIsIm92ZXJhbGxSZXN1bHQiLCJTVEFSVF9DQVNFIiwiY3VycmVudEluZGV4Iiwic2hpZnQiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJfdHlwZW9mIiwiT1BUX09VVF9DQVNFIiwiZW5kIiwiY29sbGVjdERhdGEiLCJtYXAiLCJOT09QIiwiTm9kZSIsIl9yZWYkcnVuIiwiX3JlZiRzdGFydCIsIl9yZWYkZW5kIiwiX3JlZjIkcmVydW4iLCJfbmFtZSIsIlRhc2siLCJTZXF1ZW5jZSIsIlNlbGVjdG9yIiwiUmFuZG9tIiwiX3JlZjIkaW5kZXhlcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImdldFJlZ2lzdHJ5IiwicmVnaXN0cnkiLCJsb29rZWRVcE5vZGUiLCJFcnJvciIsIkJlaGF2aW9yVHJlZSIsInRyZWUiLCJsYXN0UmVzdWx0IiwiX3JlZjIkZGVidWciLCJkZWJ1ZyIsImxhc3RSdW5EYXRhIiwiX1Rhc2syIiwiZGVmYXVsdCIsIkxvb3BEZWNvcmF0b3IiLCJfcmVmMiRsb29wIiwibG9vcCIsIkluZmluaXR5IiwiSW52ZXJ0RGVjb3JhdG9yIiwiQ29vbGRvd25EZWNvcmF0b3IiLCJfcmVmMiRjb29sZG93biIsImNvb2xkb3duIiwibG9jayIsInNldFRpbWVvdXQiLCJBbHdheXNTdWNjZWVkRGVjb3JhdG9yIiwiQWx3YXlzRmFpbERlY29yYXRvciIsIl9CZWhhdmlvclRyZWUiLCJCZWhhdmlvclRyZWVJbXBvcnRlciIsInR5cGVzIiwidGFzayIsImRlY29yYXRvciIsInNlbGVjdG9yIiwic2VxdWVuY2UiLCJpbnZlcnQiLCJmYWlsIiwic3VjY2VlZCIsIktsYXNzIiwianNvbiIsInJlZ2lzdGVyZWROb2RlIiwicGFyc2UiLCJzdWJKc29uIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsR0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLGFBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQTFCLEVBQUFrQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQXJCLEVBQUFVLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0sSUFBcUJDLEtBQUEsS0FBQUQsSUFDckksT0FBQUYsR0FJQXpCLEVBQUE2QixFQUFBLFNBQUExQixHQUNBLElBQUFTLEVBQUFULEtBQUFxQixXQUNBLFdBQTJCLE9BQUFyQixFQUFBLFNBQzNCLFdBQWlDLE9BQUFBLEdBRWpDLE9BREFILEVBQUFVLEVBQUFFLEVBQUEsSUFBQUEsR0FDQUEsR0FJQVosRUFBQWEsRUFBQSxTQUFBaUIsRUFBQUMsR0FBc0QsT0FBQWpCLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQXVCLEVBQUFDLElBR3REL0IsRUFBQWtDLEVBQUEsR0FJQWxDLElBQUFtQyxFQUFBLG9GQ2xGYUMsVUFBVWpCLE9BQU8sV0FDakJrQixXQUFVLEVBQ1ZDLFdBQVUsa2lCQ0Z2QnRDLEVBQUEsaUlBRXFCdUMsY0FHbkIsU0FBQUEsSUFBNkMsSUFBQUMsRUFBQUMsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsTUFBQUcsRUFBQUosRUFBOUJLLGNBQThCRixJQUFBQyxPQUFkRSxFQUFjQyxFQUFBUCxHQUFBLHdHQUFBUSxDQUFBQyxLQUFBVixHQUFBLElBQUFXLG1LQUFBQyxDQUFBRixNQUFBVixFQUFBYSxXQUFBdEMsT0FBQXVDLGVBQUFkLElBQUFoQyxLQUFBMEMsS0FDckNILElBRHFDLE9BQUFJLEVBRjdDSSxTQUFXLFlBSVRKLEVBQUtLLFVBQVVWLEdBRjRCSyxvWEFLbkNNLEdBRVIsT0FBT0EsZ0NBR0pDLEdBQWtFLElBQUFDLEVBQUFULEtBQUFVLEVBQUFsQixVQUFBQyxPQUFBLFFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxNQUFwRG1CLEVBQW9ERCxFQUFwREMsUUFBb0RDLEVBQUFGLEVBQTNDRyxzQkFBMkNuQixJQUFBa0IsRUFBMUIsU0FBQUUsR0FBQSxPQUFLQSxHQUFxQkYsRUFBZmhCLEVBQWVFLEVBQUFZLEdBQUEsNkJBQy9ESyxFQUFhSixLQUFlLEtBQzVCSyxFQUFTaEIsS0FBS2lCLFNBQVMsa0JBQzNCSixFQUFlSixFQUFLUyxVQUFVQyxNQUFNWixJQUFJQyxFQUF4Q1ksS0FBeUR4QixHQUFRaUIsaUJBQWdCRixRQUFTSSxNQUN6RlAsRUFBWVIsS0FBS0osUUFXcEIsT0FUSWUsR0FDRkEsRUFBUVUsTUFDTnpCLE9BQVFJLEtBQUtKLE9BQ2JsQyxLQUFNc0MsS0FBS3RDLEtBQ1g0RCxLQUFNdEIsS0FBS0ssU0FDWGtCLE1BQU9SLEVBQ1BDLFdBR0dBLG9DQUdFcEIsR0FDVEksS0FBS0osT0FBU0EscUJBaENHTixzaEJDRnJCa0MsRUFBQXpFLEVBQUEsdURBQ0FBLEVBQUEsZ0lBRXFCMEUsY0FHbkIsU0FBQUEsRUFBYVAsZ0dBQVduQixDQUFBQyxLQUFBeUIsR0FBQSxJQUFBeEIsbUtBQUFDLENBQUFGLE1BQUF5QixFQUFBdEIsV0FBQXRDLE9BQUF1QyxlQUFBcUIsSUFBQW5FLEtBQUEwQyxLQUNoQmtCLElBRGdCLE9BQUFqQixFQUZ4QkksU0FBVyxhQUtUSixFQUFLeUIsU0FBV1IsRUFBVUssTUFBTTlCLE9BSFZRLGlYQU1nRSxJQUFuRk8sRUFBbUZoQixVQUFBQyxPQUFBLFFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUF0RSxLQUFzRUQsRUFBQUMsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsTUFBQW1DLEVBQUFwQyxFQUE5RHFDLGVBQThEbEMsSUFBQWlDLE9BQWhERSxFQUFnRHRDLEVBQWhEc0MsTUFBT2xCLEVBQXlDcEIsRUFBekNvQixRQUF5Q21CLEVBQUF2QyxFQUFoQ3NCLHNCQUFnQ25CLElBQUFvQyxFQUFmLFNBQUFoQixHQUFBLE9BQUtBLEdBQVVnQixFQUNoRmYsRUFBYUosS0FBZSxLQUNsQ1gsS0FBS2tCLFVBQVVhLE1BQU12QixHQUdyQixJQUZBLElBQUl3QixFQUFnQmhDLEtBQUtpQyxXQUNyQkMsRUFBZU4sRUFBUU8sU0FBVyxFQUMvQkQsRUFBZWxDLEtBQUswQixVQUFVLENBQ25DLElBQ01WLEVBREtILEVBQWViLEtBQUtrQixVQUFVSyxNQUFNVyxJQUMzQjNCLElBQUlDLEdBQWNvQixVQUFTQyxRQUFPbEIsUUFBU0ksRUFBWUYsbUJBQzNFLEdBQUlHLGNBQ0YsT0FBU2tCLEdBQVRFLE9BQUFDLEVBQTBCVCxJQUNyQixHQUFzQixpQkFBbEIsSUFBT1osRUFBUCxZQUFBc0IsRUFBT3RCLElBQ2hCLFNBQUFvQixPQUFBQyxFQUFZVCxJQUFTTSxHQUFyQkcsRUFBc0NyQixJQUNqQyxHQUFJQSxJQUFXaEIsS0FBS3VDLGFBQWMsQ0FDdkNQLEVBQWdCaEIsRUFDaEIsUUFFRWtCLEVBSU4sR0FEQWxDLEtBQUtrQixVQUFVc0IsSUFBSWhDLEdBQ2ZHLEVBQVMsQ0FHWCxNQUZFdUIsRUFFS0EsRUFBZWxDLEtBQUswQixVQUN6QlgsRUFBV00sS0FBS1IsRUFBZWIsS0FBS2tCLFVBQVVLLE1BQU1XLElBQWVPLGlCQUNqRVAsRUFFSnZCLEVBQVFVLE1BQ04zRCxLQUFNc0MsS0FBS3RDLEtBQ1g0RCxLQUFNdEIsS0FBS0ssU0FDWGtCLE1BQU9SLEVBQ1BDLE9BQVFnQixJQUdaLE9BQU9BLHNDQUlQLE9BQ0V0RSxLQUFNc0MsS0FBS3RDLEtBQ1g0RCxLQUFNdEIsS0FBS0ssU0FDWGtCLE1BQU92QixLQUFLdUIsTUFBTW1CLElBQUksU0FBQXZCLEdBQUEsT0FBUUEsRUFBS3NCLG9DQWxEcEJoQiw4ZUNIckJELEVBQUF6RSxFQUFBLDRIQUVBLElBQU00RixFQUFPLGFBRVFDLGFBR25CLFNBQUFBLEVBQUFyRCxHQUFpRSxJQUFBc0QsRUFBQXRELEVBQWxEZ0IsV0FBa0RiLElBQUFtRCxFQUE1Q0YsRUFBNENFLEVBQUFDLEVBQUF2RCxFQUF0Q3dDLGFBQXNDckMsSUFBQW9ELEVBQTlCSCxFQUE4QkcsRUFBQUMsRUFBQXhELEVBQXhCaUQsV0FBd0I5QyxJQUFBcUQsRUFBbEJKLEVBQWtCSSxFQUFUbEQsRUFBU0MsRUFBQVAsR0FBQSxtSEFBQVEsQ0FBQUMsS0FBQTRDLEdBQUE1QyxLQUZqRUssU0FBVyxPQUdUTCxLQUFLa0IsVUFBTEUsR0FBbUJiLE1BQUt3QixRQUFPUyxPQUFRM0MseUNBR3BDVyxHQUFpRixJQUFBRSxFQUFBbEIsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsTUFBQXdELEVBQUF0QyxFQUFuRW1CLGFBQW1FbkMsSUFBQXNELEtBQXBEckMsRUFBb0RELEVBQXBEQyxRQUFvREMsRUFBQUYsRUFBM0NHLHNCQUEyQ25CLElBQUFrQixFQUExQixTQUFBRSxHQUFBLE9BQUtBLEdBQXFCRixFQUFmaEIsRUFBZUUsRUFBQVksR0FBQSxxQ0FDL0VtQixHQUFPN0IsS0FBS2tCLFVBQVVhLE1BQU12QixHQUNqQyxJQUFNUSxFQUFTaEIsS0FBS2tCLFVBQVVYLElBQUlDLEVBQW5CWSxLQUFvQ3hCLEdBQVFpQyxRQUFPbEIsVUFBU0Usb0JBVzNFLE9BVklHLGVBQ0ZoQixLQUFLa0IsVUFBVXNCLElBQUloQyxHQUVqQkcsR0FDRkEsRUFBUVUsTUFDTjNELEtBQU1zQyxLQUFLdEMsS0FDWDRELEtBQU10QixLQUFLSyxTQUNYVyxXQUdHQSx3Q0FJUCxPQUNFdEQsS0FBTXNDLEtBQUt0QyxLQUNYNEQsS0FBTXRCLEtBQUtLLHVDQUtiLE9BQU9MLEtBQUtpRCxPQUFTakQsS0FBS2tCLFVBQVV4RCxtQkFHNUJBLEdBQ1JzQyxLQUFLaUQsTUFBUXZGLHFCQW5DSWtGLGlGQ0pyQix3REFBQTdGLEVBQUEsMktBRXFCbUcsNlNBQ25CN0MsU0FBVywyV0FEUTZDLGlGQ0ZyQixJQUFBMUIsRUFBQXpFLEVBQUEsdURBQ0FBLEVBQUEsMktBRXFCb0csNlNBQ25COUMsU0FBVyxhQUNYNEIsdUJBQ0FNLDJYQUhtQlksaUZDSHJCLElBQUEzQixFQUFBekUsRUFBQSx1REFDQUEsRUFBQSwyS0FFcUJxRyw2U0FDbkIvQyxTQUFXLGFBQ1g0Qix1QkFDQU0sMlhBSG1CYSxzaEJDSHJCNUIsRUFBQXpFLEVBQUEsdURBQ0FBLEVBQUEsbVNBRXFCc0csNlNBQ25CaEQsU0FBVywrWEFFb0UsSUFBMUVHLEVBQTBFaEIsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsR0FBN0QsS0FBNkRrQixFQUFBbEIsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsTUFBQThELEVBQUE1QyxFQUFyRGtCLGVBQXFEbEMsSUFBQTRELE9BQXZDekIsRUFBdUNuQixFQUF2Q21CLE1BQXVDakIsRUFBQUYsRUFBaENHLHNCQUFnQ25CLElBQUFrQixFQUFmLFNBQUFFLEdBQUEsT0FBS0EsR0FBVUYsRUFDN0VaLEtBQUtrQixVQUFVYSxNQUFNdkIsR0FDckIsSUFBSTBCLEVBQWVOLEVBQVFPLFNBQVcsRUFDakNOLElBQ0hLLEVBQWVxQixLQUFLQyxNQUFNRCxLQUFLRSxTQUFXekQsS0FBSzBCLFdBRWpELElBQ01WLEVBRE9ILEVBQWViLEtBQUtrQixVQUFVSyxNQUFNVyxJQUM3QjNCLElBQUlDLEdBQWNvQixVQUFTQyxRQUFPaEIsbUJBQ3RELE9BQUlHLGVBQ09rQixHQUFURSxPQUFBQyxFQUEwQlQsSUFDQyxpQkFBbEIsSUFBT1osRUFBUCxZQUFBc0IsRUFBT3RCLE9BQ2hCb0IsT0FBQUMsRUFBWVQsSUFBU00sR0FBckJHLEVBQXNDckIsS0FFeENoQixLQUFLa0IsVUFBVXNCLElBQUloQyxHQUNaUSxzQkFqQlVxQyx3aEJDRUxLLFlBQVQsV0FDTCxPQUFPQyxLQUdPOUMsaUJBVGhCLElBQUFXLEVBQUF6RSxFQUFBLHVEQUNBQSxFQUFBLElBRUEsSUFBSTRHLEtBTUcsU0FBUzlDLEVBQWdCTSxHQUM5QixHQUFvQixpQkFBVEEsRUFBbUIsQ0FDNUIsSUFBTXlDLEVBQWVELEVBQVN4QyxHQUM5QixJQUFLeUMsRUFDSCxNQUFNLElBQUlDLE1BQUoscUJBQStCMUMsRUFBL0IsZ0JBRVIsT0FBT3lDLEVBRVQsT0FBT3pDLE1BR1kyQyxhQUNuQixTQUFBQSxFQUFBdkUsR0FBbUMsSUFBcEJ3RSxFQUFvQnhFLEVBQXBCd0UsS0FBTXZELEVBQWNqQixFQUFkaUIsd0dBQWNULENBQUFDLEtBQUE4RCxHQUNqQzlELEtBQUsrRCxLQUFPQSxFQUNaL0QsS0FBS1EsV0FBYUEsRUFDbEJSLEtBQUtnRSxXQUFhLDhDQUdVLElBQUFDLEdBQUF6RSxVQUFBQyxPQUFBLFFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxPQUF0QjBFLGFBQXNCeEUsSUFBQXVFLEtBQ3RCckMsRUFBVTVCLEtBQUtnRSxZQUF5QyxXQUEzQjFCLEVBQU90QyxLQUFLZ0UsWUFBMEJoRSxLQUFLZ0UsY0FDeEVuQyxFQUFRN0IsS0FBS2dFLGFBQUx4QyxFQUFBckMsU0FBK0J5QyxFQUFRbkMsT0FBUyxFQUN4RGtCLEVBQVV1RCxLQUFhLEtBQzdCbEUsS0FBS2dFLFdBQWFuRCxFQUFlYixLQUFLK0QsTUFBTXhELElBQUlQLEtBQUtRLFlBQWNvQixVQUFTQyxRQUFPaEIsaUJBQWdCRixZQUNuR1gsS0FBS21FLFlBQWN4RCxxQ0FHSmpELEVBQU15RCxHQUNyQndDLEVBQVNqRyxHQUF3QixtQkFBVHlELEVBQ3BCLElBQUFpRCxFQUFBQyxTQUFXM0csT0FBTTZDLElBQUtZLElBQ3RCQSwwQ0FJSndDLHdCQXRCaUJHLDBVQ3BCckJ0QyxFQUFBekUsRUFBQSx1REFDQUEsRUFBQSwyS0FFcUJ1SCw2U0FDbkJqRSxTQUFXLDZZQUVxQixJQUFBa0UsRUFBQTdELEVBQW5COEQsWUFBbUI5RSxJQUFBNkUsRUFBWkUsSUFBWUYsRUFDOUJ2RSxLQUFLSixRQUNINEUseUNBSU1qRSxHQUdSLElBRkEsSUFBSXBELEVBQUksRUFDSjZELFlBQ0c3RCxJQUFNNkMsS0FBS0osT0FBTzRFLE1BRXZCLElBREF4RCxFQUFTVCxPQUNMUyxVQUFvQixPQUFBUSxFQUFBbkMsUUFFMUIsT0FBTzJCLHFCQWhCVXNELDBVQ0hyQjlDLEVBQUF6RSxFQUFBLHVEQUNBQSxFQUFBLDJLQUVxQjJILDZTQUNuQnJFLFNBQVcsMllBRURFLEdBQ1IsSUFBTVMsRUFBU1QsSUFDZixPQUFJUyxjQUFvQlEsRUFBQXJDLFFBQ2pCNkIscURBTlUwRCwwVUNIckJsRCxFQUFBekUsRUFBQSx1REFDQUEsRUFBQSwyS0FFcUI0SCw2U0FDbkJ0RSxTQUFXLGlaQUVrQixJQUFBdUUsRUFBQWxFLEVBQWhCbUUsZ0JBQWdCbkYsSUFBQWtGLEVBQUwsRUFBS0EsRUFDM0I1RSxLQUFLSixRQUNIaUYsNkNBSU10RSxHQUFLLElBQUFFLEVBQUFULEtBQ2IsT0FBSUEsS0FBSzhFLEtBQ1B0RCxFQUFBbkMsU0FFRlcsS0FBSzhFLE1BQU8sRUFDWkMsV0FBVyxXQUNUdEUsRUFBS3FFLE1BQU8sR0FDWSxJQUF2QjlFLEtBQUtKLE9BQU9pRixVQUNSdEUsd0JBakJVb0UsMFVDSHJCbkQsRUFBQXpFLEVBQUEsdURBQ0FBLEVBQUEsMktBRXFCaUksNlNBQ25CM0UsU0FBVyxrWkFFREUsR0FFUixPQURlQSxNQUNYUyxVQUFvQlEsRUFBQXJDLFFBQ3hCcUMsRUFBQXBDLDJCQU5pQjRGLDBVQ0hyQnhELEVBQUF6RSxFQUFBLHVEQUNBQSxFQUFBLDJLQUVxQmtJLDZTQUNuQjVFLFNBQVcsK1lBRURFLEdBRVIsT0FEZUEsTUFDWFMsVUFBb0JRLEVBQUFyQyxRQUN4QnFDLEVBQUFuQywyQkFOaUI0Riw4VUNIckJsSSxFQUFBLFFBQ0FBLEVBQUEsUUFDQUEsRUFBQSxRQUNBQSxFQUFBLFFBQ0FBLEVBQUEsUUFDQUEsRUFBQSxTQUNBQSxFQUFBLFNBQ0FBLEVBQUEsU0FDQUEsRUFBQSxTQUNBQSxFQUFBLElBQ0FtSSxFQUFBbkksRUFBQSwwREFFcUJvSSxxSUFDbkJDLE9BQ0VDLGVBQ0FDLG9CQUNBQyxtQkFDQUMsbUJBQ0EvQixpQkFDQWdDLGlCQUNBQyxlQUNBQyxrQkFDQWQsbUJBQ0FMLDZEQUdVbEQsRUFBTXNFLEdBQ2hCNUYsS0FBS29GLE1BQU05RCxHQUFRc0UsZ0NBR2RDLEdBQU0sSUFBQTVGLEVBQUFELEtBQ0hzQixFQUF1Q3VFLEVBQXZDdkUsS0FBTTVELEVBQWlDbUksRUFBakNuSSxLQUFNeUQsRUFBMkIwRSxFQUEzQjFFLEtBQU1JLEVBQXFCc0UsRUFBckJ0RSxNQUFVM0IseUhBRHpCRSxDQUNvQytGLEdBRHBDLCtCQUVMRCxFQUFRNUYsS0FBS29GLE1BQU05RCxHQUN6QixJQUFLc0UsRUFBTyxDQUNWLElBQU1FLEdBQWlCLEVBQUFaLEVBQUFyRSxnQkFBZVMsR0FDdEMsR0FBSXdFLEVBRUYsT0FEQUEsRUFBZXBJLEtBQU9BLEVBQ2ZvSSxFQUVULE1BQU0sSUFBSWpDLE1BQUosaUNBQTJDdkMsRUFBM0MsaUNBR1IsT0FBTyxJQUFJc0UsR0FDVGxJLEtBQU1BLEVBQ055RCxLQUFNQSxFQUFPbkIsS0FBSytGLE1BQU01RSxHQUFRLEtBQ2hDSSxNQUFPQSxFQUFRQSxFQUFNbUIsSUFBSSxTQUFBc0QsR0FBQSxPQUFXL0YsRUFBSzhGLE1BQU1DLEtBQVksS0FDM0RwRyw4QkFsQ2V1RixzVUNFWi9GLG9GQUFTQyxvRkFBU0YsV0FkM0IsSUFBQStGLEVBQUFuSSxFQUFBLG9LQUVTMkcsNEJBQWE3QyxrQ0FFZnNFLGlDQUVBMUQsdUJBQ0FtQixpQkFDQVEscUJBQ0FELHFCQUNBRSxtQkFDQS9ELHNCQUNBNEQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTUpO1xuIiwiZXhwb3J0IGNvbnN0IFJVTk5JTkcgPSBTeW1ib2woJ3J1bm5pbmcnKVxuZXhwb3J0IGNvbnN0IFNVQ0NFU1MgPSB0cnVlXG5leHBvcnQgY29uc3QgRkFJTFVSRSA9IGZhbHNlXG4iLCJpbXBvcnQgTm9kZSBmcm9tICcuL05vZGUnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlY29yYXRvciBleHRlbmRzIE5vZGUge1xuICBub2RlVHlwZSA9ICdEZWNvcmF0b3InXG5cbiAgY29uc3RydWN0b3IgKHsgY29uZmlnID0ge30sIC4uLnByb3BzIH0gPSB7fSkge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMuc2V0Q29uZmlnKGNvbmZpZylcbiAgfVxuXG4gIGRlY29yYXRlIChydW4pIHtcbiAgICAvLyBUaGlzIG1ldGhvZCBzaG91bGQgYmUgb3ZlcnJpZGRlbiB0byBtYWtlIGl0IHVzZWZ1bFxuICAgIHJldHVybiBydW4oKVxuICB9XG5cbiAgcnVuIChibGFja2JvYXJkLCB7IHJ1bkRhdGEsIHJlZ2lzdHJ5TG9va1VwID0geCA9PiB4LCAuLi5jb25maWcgfSA9IHt9KSB7XG4gICAgY29uc3Qgc3ViUnVuRGF0YSA9IHJ1bkRhdGEgPyBbXSA6IG51bGxcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmRlY29yYXRlKCgpID0+IChcbiAgICAgIHJlZ2lzdHJ5TG9va1VwKHRoaXMuYmx1ZXByaW50Lm5vZGUpLnJ1bihibGFja2JvYXJkLCB7IC4uLmNvbmZpZywgcmVnaXN0cnlMb29rVXAsIHJ1bkRhdGE6IHN1YlJ1bkRhdGEgfSlcbiAgICApLCBibGFja2JvYXJkLCB0aGlzLmNvbmZpZylcblxuICAgIGlmIChydW5EYXRhKSB7XG4gICAgICBydW5EYXRhLnB1c2goe1xuICAgICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgIHR5cGU6IHRoaXMubm9kZVR5cGUsXG4gICAgICAgIG5vZGVzOiBzdWJSdW5EYXRhLFxuICAgICAgICByZXN1bHRcbiAgICAgIH0pXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIHNldENvbmZpZyAoY29uZmlnKSB7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWdcbiAgfVxufVxuIiwiaW1wb3J0IHsgUlVOTklORyB9IGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCcmFuY2hOb2RlIGV4dGVuZHMgTm9kZSB7XG4gIG5vZGVUeXBlID0gJ0JyYW5jaE5vZGUnXG5cbiAgY29uc3RydWN0b3IgKGJsdWVwcmludCkge1xuICAgIHN1cGVyKGJsdWVwcmludClcblxuICAgIHRoaXMubnVtTm9kZXMgPSBibHVlcHJpbnQubm9kZXMubGVuZ3RoXG4gIH1cblxuICBydW4gKGJsYWNrYm9hcmQgPSBudWxsLCB7IGluZGV4ZXMgPSBbXSwgcmVydW4sIHJ1bkRhdGEsIHJlZ2lzdHJ5TG9va1VwID0geCA9PiB4IH0gPSB7fSkge1xuICAgIGNvbnN0IHN1YlJ1bkRhdGEgPSBydW5EYXRhID8gW10gOiBudWxsXG4gICAgdGhpcy5ibHVlcHJpbnQuc3RhcnQoYmxhY2tib2FyZClcbiAgICBsZXQgb3ZlcmFsbFJlc3VsdCA9IHRoaXMuU1RBUlRfQ0FTRVxuICAgIGxldCBjdXJyZW50SW5kZXggPSBpbmRleGVzLnNoaWZ0KCkgfHwgMFxuICAgIHdoaWxlIChjdXJyZW50SW5kZXggPCB0aGlzLm51bU5vZGVzKSB7XG4gICAgICBsZXQgbm9kZSA9IHJlZ2lzdHJ5TG9va1VwKHRoaXMuYmx1ZXByaW50Lm5vZGVzW2N1cnJlbnRJbmRleF0pXG4gICAgICBjb25zdCByZXN1bHQgPSBub2RlLnJ1bihibGFja2JvYXJkLCB7IGluZGV4ZXMsIHJlcnVuLCBydW5EYXRhOiBzdWJSdW5EYXRhLCByZWdpc3RyeUxvb2tVcCB9KVxuICAgICAgaWYgKHJlc3VsdCA9PT0gUlVOTklORykge1xuICAgICAgICByZXR1cm4gWyBjdXJyZW50SW5kZXgsIC4uLmluZGV4ZXMgXVxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnb2JqZWN0JykgeyAvLyBhcnJheVxuICAgICAgICByZXR1cm4gWyAuLi5pbmRleGVzLCBjdXJyZW50SW5kZXgsIC4uLnJlc3VsdCBdXG4gICAgICB9IGVsc2UgaWYgKHJlc3VsdCA9PT0gdGhpcy5PUFRfT1VUX0NBU0UpIHtcbiAgICAgICAgb3ZlcmFsbFJlc3VsdCA9IHJlc3VsdFxuICAgICAgICBicmVha1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgKytjdXJyZW50SW5kZXhcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5ibHVlcHJpbnQuZW5kKGJsYWNrYm9hcmQpXG4gICAgaWYgKHJ1bkRhdGEpIHtcbiAgICAgICsrY3VycmVudEluZGV4XG4gICAgICAvLyBjb2xsZWN0IGRhdGEgb2YgdW5maW5pc2hlZCBub2Rlc1xuICAgICAgd2hpbGUgKGN1cnJlbnRJbmRleCA8IHRoaXMubnVtTm9kZXMpIHtcbiAgICAgICAgc3ViUnVuRGF0YS5wdXNoKHJlZ2lzdHJ5TG9va1VwKHRoaXMuYmx1ZXByaW50Lm5vZGVzW2N1cnJlbnRJbmRleF0pLmNvbGxlY3REYXRhKCkpXG4gICAgICAgICsrY3VycmVudEluZGV4XG4gICAgICB9XG4gICAgICBydW5EYXRhLnB1c2goe1xuICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgIHR5cGU6IHRoaXMubm9kZVR5cGUsXG4gICAgICAgIG5vZGVzOiBzdWJSdW5EYXRhLFxuICAgICAgICByZXN1bHQ6IG92ZXJhbGxSZXN1bHRcbiAgICAgIH0pXG4gICAgfVxuICAgIHJldHVybiBvdmVyYWxsUmVzdWx0XG4gIH1cblxuICBnZXQgY29sbGVjdERhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICB0eXBlOiB0aGlzLm5vZGVUeXBlLFxuICAgICAgbm9kZXM6IHRoaXMubm9kZXMubWFwKG5vZGUgPT4gbm9kZS5jb2xsZWN0RGF0YSgpKVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHsgUlVOTklORyB9IGZyb20gJy4vY29uc3RhbnRzJ1xuXG5jb25zdCBOT09QID0gKCkgPT4ge31cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9kZSB7XG4gIG5vZGVUeXBlID0gJ05vZGUnXG5cbiAgY29uc3RydWN0b3IgKHsgcnVuID0gTk9PUCwgc3RhcnQgPSBOT09QLCBlbmQgPSBOT09QLCAuLi5wcm9wcyB9KSB7XG4gICAgdGhpcy5ibHVlcHJpbnQgPSB7IHJ1biwgc3RhcnQsIGVuZCwgLi4ucHJvcHMgfVxuICB9XG5cbiAgcnVuIChibGFja2JvYXJkLCB7IHJlcnVuID0gZmFsc2UsIHJ1bkRhdGEsIHJlZ2lzdHJ5TG9va1VwID0geCA9PiB4LCAuLi5jb25maWcgfSA9IHt9KSB7XG4gICAgaWYgKCFyZXJ1bikgdGhpcy5ibHVlcHJpbnQuc3RhcnQoYmxhY2tib2FyZClcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmJsdWVwcmludC5ydW4oYmxhY2tib2FyZCwgeyAuLi5jb25maWcsIHJlcnVuLCBydW5EYXRhLCByZWdpc3RyeUxvb2tVcCB9KVxuICAgIGlmIChyZXN1bHQgIT09IFJVTk5JTkcpIHtcbiAgICAgIHRoaXMuYmx1ZXByaW50LmVuZChibGFja2JvYXJkKVxuICAgIH1cbiAgICBpZiAocnVuRGF0YSkge1xuICAgICAgcnVuRGF0YS5wdXNoKHtcbiAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgICB0eXBlOiB0aGlzLm5vZGVUeXBlLFxuICAgICAgICByZXN1bHRcbiAgICAgIH0pXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGNvbGxlY3REYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgdHlwZTogdGhpcy5ub2RlVHlwZVxuICAgIH1cbiAgfVxuXG4gIGdldCBuYW1lICgpIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZSB8fCB0aGlzLmJsdWVwcmludC5uYW1lXG4gIH1cblxuICBzZXQgbmFtZSAobmFtZSkge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lXG4gIH1cbn1cbiIsImltcG9ydCBOb2RlIGZyb20gJy4vTm9kZSdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFzayBleHRlbmRzIE5vZGUge1xuICBub2RlVHlwZSA9ICdUYXNrJ1xufVxuIiwiaW1wb3J0IHsgU1VDQ0VTUywgRkFJTFVSRSB9IGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IEJyYW5jaE5vZGUgZnJvbSAnLi9CcmFuY2hOb2RlJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXF1ZW5jZSBleHRlbmRzIEJyYW5jaE5vZGUge1xuICBub2RlVHlwZSA9ICdTZXF1ZW5jZSdcbiAgU1RBUlRfQ0FTRSA9IFNVQ0NFU1NcbiAgT1BUX09VVF9DQVNFID0gRkFJTFVSRVxufVxuIiwiaW1wb3J0IHsgU1VDQ0VTUywgRkFJTFVSRSB9IGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IEJyYW5jaE5vZGUgZnJvbSAnLi9CcmFuY2hOb2RlJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWxlY3RvciBleHRlbmRzIEJyYW5jaE5vZGUge1xuICBub2RlVHlwZSA9ICdTZWxlY3RvcidcbiAgU1RBUlRfQ0FTRSA9IEZBSUxVUkVcbiAgT1BUX09VVF9DQVNFID0gU1VDQ0VTU1xufVxuIiwiaW1wb3J0IHsgUlVOTklORyB9IGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IEJyYW5jaE5vZGUgZnJvbSAnLi9CcmFuY2hOb2RlJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYW5kb20gZXh0ZW5kcyBCcmFuY2hOb2RlIHtcbiAgbm9kZVR5cGUgPSAnUmFuZG9tJ1xuXG4gIHJ1biAoYmxhY2tib2FyZCA9IG51bGwsIHsgaW5kZXhlcyA9IFtdLCByZXJ1biwgcmVnaXN0cnlMb29rVXAgPSB4ID0+IHggfSA9IHt9KSB7XG4gICAgdGhpcy5ibHVlcHJpbnQuc3RhcnQoYmxhY2tib2FyZClcbiAgICBsZXQgY3VycmVudEluZGV4ID0gaW5kZXhlcy5zaGlmdCgpIHx8IDBcbiAgICBpZiAoIXJlcnVuKSB7XG4gICAgICBjdXJyZW50SW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLm51bU5vZGVzKVxuICAgIH1cbiAgICBjb25zdCBub2RlID0gcmVnaXN0cnlMb29rVXAodGhpcy5ibHVlcHJpbnQubm9kZXNbY3VycmVudEluZGV4XSlcbiAgICBjb25zdCByZXN1bHQgPSBub2RlLnJ1bihibGFja2JvYXJkLCB7IGluZGV4ZXMsIHJlcnVuLCByZWdpc3RyeUxvb2tVcCB9KVxuICAgIGlmIChyZXN1bHQgPT09IFJVTk5JTkcpIHtcbiAgICAgIHJldHVybiBbIGN1cnJlbnRJbmRleCwgLi4uaW5kZXhlcyBdXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnb2JqZWN0JykgeyAvLyBhcnJheVxuICAgICAgcmV0dXJuIFsgLi4uaW5kZXhlcywgY3VycmVudEluZGV4LCAuLi5yZXN1bHQgXVxuICAgIH1cbiAgICB0aGlzLmJsdWVwcmludC5lbmQoYmxhY2tib2FyZClcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cbiIsImltcG9ydCB7IFJVTk5JTkcgfSBmcm9tICcuL2NvbnN0YW50cydcbmltcG9ydCBUYXNrIGZyb20gJy4vVGFzaydcblxubGV0IHJlZ2lzdHJ5ID0ge31cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlZ2lzdHJ5ICgpIHtcbiAgcmV0dXJuIHJlZ2lzdHJ5XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RyeUxvb2tVcCAobm9kZSkge1xuICBpZiAodHlwZW9mIG5vZGUgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uc3QgbG9va2VkVXBOb2RlID0gcmVnaXN0cnlbbm9kZV1cbiAgICBpZiAoIWxvb2tlZFVwTm9kZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBub2RlIHdpdGggbmFtZSAke25vZGV9IHJlZ2lzdGVyZWQuYClcbiAgICB9XG4gICAgcmV0dXJuIGxvb2tlZFVwTm9kZVxuICB9XG4gIHJldHVybiBub2RlXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJlaGF2aW9yVHJlZSB7XG4gIGNvbnN0cnVjdG9yICh7IHRyZWUsIGJsYWNrYm9hcmQgfSkge1xuICAgIHRoaXMudHJlZSA9IHRyZWVcbiAgICB0aGlzLmJsYWNrYm9hcmQgPSBibGFja2JvYXJkXG4gICAgdGhpcy5sYXN0UmVzdWx0ID0gbnVsbFxuICB9XG5cbiAgc3RlcCAoeyBkZWJ1ZyA9IGZhbHNlIH0gPSB7fSkge1xuICAgIGNvbnN0IGluZGV4ZXMgPSB0aGlzLmxhc3RSZXN1bHQgJiYgdHlwZW9mIHRoaXMubGFzdFJlc3VsdCA9PT0gJ29iamVjdCcgPyB0aGlzLmxhc3RSZXN1bHQgOiBbXVxuICAgIGNvbnN0IHJlcnVuID0gdGhpcy5sYXN0UmVzdWx0ID09PSBSVU5OSU5HIHx8IGluZGV4ZXMubGVuZ3RoID4gMFxuICAgIGNvbnN0IHJ1bkRhdGEgPSBkZWJ1ZyA/IFtdIDogbnVsbFxuICAgIHRoaXMubGFzdFJlc3VsdCA9IHJlZ2lzdHJ5TG9va1VwKHRoaXMudHJlZSkucnVuKHRoaXMuYmxhY2tib2FyZCwgeyBpbmRleGVzLCByZXJ1biwgcmVnaXN0cnlMb29rVXAsIHJ1bkRhdGEgfSlcbiAgICB0aGlzLmxhc3RSdW5EYXRhID0gcnVuRGF0YVxuICB9XG5cbiAgc3RhdGljIHJlZ2lzdGVyIChuYW1lLCBub2RlKSB7XG4gICAgcmVnaXN0cnlbbmFtZV0gPSB0eXBlb2Ygbm9kZSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgPyBuZXcgVGFzayh7IG5hbWUsIHJ1bjogbm9kZSB9KVxuICAgICAgOiBub2RlXG4gIH1cblxuICBzdGF0aWMgY2xlYW5SZWdpc3RyeSAoKSB7XG4gICAgcmVnaXN0cnkgPSB7fVxuICB9XG59XG4iLCJpbXBvcnQgeyBGQUlMVVJFIH0gZnJvbSAnLi4vY29uc3RhbnRzJ1xuaW1wb3J0IERlY29yYXRvciBmcm9tICcuLi9EZWNvcmF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvb3BEZWNvcmF0b3IgZXh0ZW5kcyBEZWNvcmF0b3Ige1xuICBub2RlVHlwZSA9ICdMb29wRGVjb3JhdG9yJ1xuXG4gIHNldENvbmZpZyAoeyBsb29wID0gSW5maW5pdHkgfSkge1xuICAgIHRoaXMuY29uZmlnID0ge1xuICAgICAgbG9vcFxuICAgIH1cbiAgfVxuXG4gIGRlY29yYXRlIChydW4pIHtcbiAgICBsZXQgaSA9IDBcbiAgICBsZXQgcmVzdWx0ID0gRkFJTFVSRVxuICAgIHdoaWxlIChpKysgPCB0aGlzLmNvbmZpZy5sb29wKSB7XG4gICAgICByZXN1bHQgPSBydW4oKVxuICAgICAgaWYgKHJlc3VsdCA9PT0gRkFJTFVSRSkgcmV0dXJuIEZBSUxVUkVcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG59XG4iLCJpbXBvcnQgeyBSVU5OSU5HLCBTVUNDRVNTLCBGQUlMVVJFIH0gZnJvbSAnLi4vY29uc3RhbnRzJ1xuaW1wb3J0IERlY29yYXRvciBmcm9tICcuLi9EZWNvcmF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEludmVydERlY29yYXRvciBleHRlbmRzIERlY29yYXRvciB7XG4gIG5vZGVUeXBlID0gJ0ludmVydERlY29yYXRvcidcblxuICBkZWNvcmF0ZSAocnVuKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gcnVuKClcbiAgICBpZiAocmVzdWx0ID09PSBSVU5OSU5HKSByZXR1cm4gUlVOTklOR1xuICAgIHJldHVybiByZXN1bHQgPT09IFNVQ0NFU1MgPyBGQUlMVVJFIDogU1VDQ0VTU1xuICB9XG59XG4iLCJpbXBvcnQgeyBGQUlMVVJFIH0gZnJvbSAnLi4vY29uc3RhbnRzJ1xuaW1wb3J0IERlY29yYXRvciBmcm9tICcuLi9EZWNvcmF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvb2xkb3duRGVjb3JhdG9yIGV4dGVuZHMgRGVjb3JhdG9yIHtcbiAgbm9kZVR5cGUgPSAnQ29vbGRvd25EZWNvcmF0b3InXG5cbiAgc2V0Q29uZmlnICh7IGNvb2xkb3duID0gNSB9KSB7XG4gICAgdGhpcy5jb25maWcgPSB7XG4gICAgICBjb29sZG93blxuICAgIH1cbiAgfVxuXG4gIGRlY29yYXRlIChydW4pIHtcbiAgICBpZiAodGhpcy5sb2NrKSB7XG4gICAgICByZXR1cm4gRkFJTFVSRVxuICAgIH1cbiAgICB0aGlzLmxvY2sgPSB0cnVlXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLmxvY2sgPSBmYWxzZVxuICAgIH0sIHRoaXMuY29uZmlnLmNvb2xkb3duICogMTAwMClcbiAgICByZXR1cm4gcnVuKClcbiAgfVxufVxuIiwiaW1wb3J0IHsgUlVOTklORywgU1VDQ0VTUyB9IGZyb20gJy4uL2NvbnN0YW50cydcbmltcG9ydCBEZWNvcmF0b3IgZnJvbSAnLi4vRGVjb3JhdG9yJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbHdheXNTdWNjZWVkRGVjb3JhdG9yIGV4dGVuZHMgRGVjb3JhdG9yIHtcbiAgbm9kZVR5cGUgPSAnQWx3YXlzU3VjY2VlZERlY29yYXRvcidcblxuICBkZWNvcmF0ZSAocnVuKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gcnVuKClcbiAgICBpZiAocmVzdWx0ID09PSBSVU5OSU5HKSByZXR1cm4gUlVOTklOR1xuICAgIHJldHVybiBTVUNDRVNTXG4gIH1cbn1cbiIsImltcG9ydCB7IFJVTk5JTkcsIEZBSUxVUkUgfSBmcm9tICcuLi9jb25zdGFudHMnXG5pbXBvcnQgRGVjb3JhdG9yIGZyb20gJy4uL0RlY29yYXRvcidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWx3YXlzRmFpbERlY29yYXRvciBleHRlbmRzIERlY29yYXRvciB7XG4gIG5vZGVUeXBlID0gJ0Fsd2F5c0ZhaWxEZWNvcmF0b3InXG5cbiAgZGVjb3JhdGUgKHJ1bikge1xuICAgIGNvbnN0IHJlc3VsdCA9IHJ1bigpXG4gICAgaWYgKHJlc3VsdCA9PT0gUlVOTklORykgcmV0dXJuIFJVTk5JTkdcbiAgICByZXR1cm4gRkFJTFVSRVxuICB9XG59XG4iLCJpbXBvcnQgRGVjb3JhdG9yIGZyb20gJy4vRGVjb3JhdG9yJ1xuaW1wb3J0IFJhbmRvbSBmcm9tICcuL1JhbmRvbSdcbmltcG9ydCBTZWxlY3RvciBmcm9tICcuL1NlbGVjdG9yJ1xuaW1wb3J0IFNlcXVlbmNlIGZyb20gJy4vU2VxdWVuY2UnXG5pbXBvcnQgVGFzayBmcm9tICcuL1Rhc2snXG5pbXBvcnQgQWx3YXlzRmFpbERlY29yYXRvciBmcm9tICcuL2RlY29yYXRvcnMvQWx3YXlzRmFpbERlY29yYXRvcidcbmltcG9ydCBBbHdheXNTdWNjZWVkRGVjb3JhdG9yIGZyb20gJy4vZGVjb3JhdG9ycy9BbHdheXNTdWNjZWVkRGVjb3JhdG9yJ1xuaW1wb3J0IENvb2xkb3duRGVjb3JhdG9yIGZyb20gJy4vZGVjb3JhdG9ycy9Db29sZG93bkRlY29yYXRvcidcbmltcG9ydCBJbnZlcnREZWNvcmF0b3IgZnJvbSAnLi9kZWNvcmF0b3JzL0ludmVydERlY29yYXRvcidcbmltcG9ydCBMb29wRGVjb3JhdG9yIGZyb20gJy4vZGVjb3JhdG9ycy9Mb29wRGVjb3JhdG9yJ1xuaW1wb3J0IHsgcmVnaXN0cnlMb29rVXAgfSBmcm9tICcuL0JlaGF2aW9yVHJlZSdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmVoYXZpb3JUcmVlSW1wb3J0ZXIge1xuICB0eXBlcyA9IHtcbiAgICB0YXNrOiBUYXNrLFxuICAgIGRlY29yYXRvcjogRGVjb3JhdG9yLFxuICAgIHNlbGVjdG9yOiBTZWxlY3RvcixcbiAgICBzZXF1ZW5jZTogU2VxdWVuY2UsXG4gICAgcmFuZG9tOiBSYW5kb20sXG4gICAgaW52ZXJ0OiBJbnZlcnREZWNvcmF0b3IsXG4gICAgZmFpbDogQWx3YXlzRmFpbERlY29yYXRvcixcbiAgICBzdWNjZWVkOiBBbHdheXNTdWNjZWVkRGVjb3JhdG9yLFxuICAgIGNvb2xkb3duOiBDb29sZG93bkRlY29yYXRvcixcbiAgICBsb29wOiBMb29wRGVjb3JhdG9yXG4gIH1cblxuICBkZWZpbmVUeXBlICh0eXBlLCBLbGFzcykge1xuICAgIHRoaXMudHlwZXNbdHlwZV0gPSBLbGFzc1xuICB9XG5cbiAgcGFyc2UgKGpzb24pIHtcbiAgICBjb25zdCB7IHR5cGUsIG5hbWUsIG5vZGUsIG5vZGVzLCAuLi5jb25maWcgfSA9IGpzb25cbiAgICBjb25zdCBLbGFzcyA9IHRoaXMudHlwZXNbdHlwZV1cbiAgICBpZiAoIUtsYXNzKSB7XG4gICAgICBjb25zdCByZWdpc3RlcmVkTm9kZSA9IHJlZ2lzdHJ5TG9va1VwKHR5cGUpXG4gICAgICBpZiAocmVnaXN0ZXJlZE5vZGUpIHtcbiAgICAgICAgcmVnaXN0ZXJlZE5vZGUubmFtZSA9IG5hbWVcbiAgICAgICAgcmV0dXJuIHJlZ2lzdGVyZWROb2RlXG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYERvbid0IGtub3cgaG93IHRvIGhhbmRsZSB0eXBlICR7dHlwZX0uIFBsZWFzZSByZWdpc3RlciB0aGlzIGZpcnN0LmApXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBLbGFzcyh7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgbm9kZTogbm9kZSA/IHRoaXMucGFyc2Uobm9kZSkgOiBudWxsLFxuICAgICAgbm9kZXM6IG5vZGVzID8gbm9kZXMubWFwKHN1Ykpzb24gPT4gdGhpcy5wYXJzZShzdWJKc29uKSkgOiBudWxsLFxuICAgICAgY29uZmlnXG4gICAgfSlcbiAgfVxufVxuIiwiaW1wb3J0IEJlaGF2aW9yVHJlZSwgeyBnZXRSZWdpc3RyeSwgcmVnaXN0cnlMb29rVXAgfSBmcm9tICcuL0JlaGF2aW9yVHJlZSdcbmV4cG9ydCBkZWZhdWx0IEJlaGF2aW9yVHJlZVxuZXhwb3J0IHsgZ2V0UmVnaXN0cnksIHJlZ2lzdHJ5TG9va1VwIH1cblxuZXhwb3J0IEJlaGF2aW9yVHJlZUltcG9ydGVyIGZyb20gJy4vQmVoYXZpb3JUcmVlSW1wb3J0ZXInXG5cbmV4cG9ydCBCcmFuY2hOb2RlIGZyb20gJy4vQnJhbmNoTm9kZSdcbmV4cG9ydCBOb2RlIGZyb20gJy4vTm9kZSdcbmV4cG9ydCBTZWxlY3RvciBmcm9tICcuL1NlbGVjdG9yJ1xuZXhwb3J0IFNlcXVlbmNlIGZyb20gJy4vU2VxdWVuY2UnXG5leHBvcnQgUmFuZG9tIGZyb20gJy4vUmFuZG9tJ1xuZXhwb3J0IERlY29yYXRvciBmcm9tICcuL0RlY29yYXRvcidcbmV4cG9ydCBUYXNrIGZyb20gJy4vVGFzaydcblxuZXhwb3J0IHsgU1VDQ0VTUywgRkFJTFVSRSwgUlVOTklORyB9IGZyb20gJy4vY29uc3RhbnRzJ1xuIl0sInNvdXJjZVJvb3QiOiIifQ==